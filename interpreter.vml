(
eval-dispatch
    (branch (self-evaluation? (fetch exp)) ev-self-eval)
    (branch (variable? (fetch exp)) ev-variable)
    (branch (application? (fetch exp)) ev-application)
ev-self-eval
    (assign val (fetch exp))
    (goto (fetch continue))
ev-variable
    (assign val (lookup-variable-value (fetch exp)))
    (goto (fetch continue))
ev-application
    (assign unev (cdr (fetch exp)))
    (assign exp (car (fetch exp)))
    (save continue)
    (save env)
    (save unev)
    (assign continue eval-args)
    (goto eval-dispatch)
eval-args
    (restore unev)
    (restore env)
    (assign fun (fetch val))
    (save fun)
    (assign argl '())
    (goto eval-arg-loop)
eval-arg-loop
    (save argl)
    (assign exp (car (fetch unev)))
    (branch (last-operand? (fetch unev)) eval-last-arg)
    (save env)
    (save unev)
    (assign continue accumulate-arg)
    (goto eval-dispatch)
accumulate-arg
    (restore unev)
    (restore env)
    (restore argl)
    (assign argl (cons (fetch val) (fetch argl)))
    (assign unev (cdr (fetch unev)))
    (goto eval-arg-loop)
eval-last-arg
    (assign continue accumulate-last-arg)
    (goto eval-dispatch)
accumulate-last-arg
    (restore argl)
    (assign argl (cons (fetch val) (fetch argl)))
    (restore fun)
    (goto apply-dispatch)
apply-dispatch
    (branch (primitive-proc? (fetch fun)) primitive-apply)
    (branch (compound-proc? (fetch fun)) compound-apply)
    (goto unknown-proc-type-error)
primitive-apply
    (assign val (apply-primitive-proc (fetch fun) (fetch argl)))
    (restore continue)
    (goto (fetch continue))
compound-apply
    (assign exp (procedure-body (fetch fun)))
    (assign env (make-bindings (fetch fun) (fetch argl)))
    (restore continue)
    (goto eval-dispatch)
done
)